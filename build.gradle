plugins {
	id 'org.springframework.boot' version '2.3.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
    id "org.kravemir.gradle.sass" version "1.2.2"
}

group = 'net.olikester'
version = '0.1.0'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	// https://mvnrepository.com/artifact/org.springframework.security.oauth/spring-security-oauth
	implementation 'org.springframework.security.oauth:spring-security-oauth:2.5.0.RELEASE'
	
  	implementation 'org.springframework.session:spring-session-jdbc'
  	implementation 'org.webjars:bootstrap:4.5.3'  	
  	implementation 'com.google.guava:guava:28.0-jre'
  	implementation 'net.sf.supercsv:super-csv:2.4.0'
	
	//implementation 'org.springframework.boot:spring-boot-starter-security'	
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'io.projectreactor:reactor-test'
}

test {
	useJUnitPlatform()
	testLogging.showStandardStreams = true
}

sass {
    main {
        srcDir = file("$projectDir/src/main/sass")
        outDir = file("$projectDir/src/main/resources/static")
        
        outSubDir = "css"
        registerInSourceSets ( 'main' )
    }
}

compileJava.dependsOn(mainSass)